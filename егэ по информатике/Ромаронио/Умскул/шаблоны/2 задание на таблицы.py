# 2 задание на сопоставление таблицы и условия

# 1 способ (полу руками, полу прогой)

print('x y z w') #создаем солбцы, что бы было понятно, что к какому столцу относится
for x in range(2): #перебираем x
    for y in range(2): #перебираем y
        for z in range(2): #перебираем z
            for w in range(2): #перебираем w
                if ((z and (not (x))) or w or (not (y))) == 0: #проверяем если условие соответствует 5 столцу таблицы, значит оно нам подходит
                    print(x, y, w, z) #выводим все возможные варианты и сопоставляем с таблицей, находим, что нам подходит, а что не подходит


# 2 способ (полностью на проге работает в 100% случаев)

from itertools import * #импортируем itertools
def f(x, y, z, w): #создаем функцию которая проверяет условие
	return (not(x)) and ((z <= y) <= w) #проверяем условие
for a in product([0,1], repeat=4): #перебираем все возможные варианты перестановки 1 и 0, которые повторяются 4 раза
	table = [(0, a[0], 1, a[1]), (1, a[2], 0, 1), (0, 0, a[3], 1)] #создаем таблицу, просто переписываем таблицу которая дана в задании, на место пропусков вставляем разные значения a
	if len(set(table)) != 3: #проверяем, что все строчки в таблице разные, если они одинаковые, то выходим из цыкла
		continue #сразу заканчивает работаться с этим элементом и переходит к следующему
	for i in permutations('xyzw'): #перебираем все варианты расстановки xyzw
		if [f(**dict(zip(i, stroka))) for stroka in table] == [1, 1, 0]: #вот тут интересно, в функцию f мы передаем все возможные комбинации xyzw и 0 и 1
        #для этого мы с начала с помощью zip склеиваем строку с которая получилась из table с i всеми возможными вариантыми 1 и 0. Потом применяем dict который преобразает скляный набор символов в объект или список
			print(i)

