# 13 задание на IP addres
from ipaddress import * #импортируем бибилиотеку 
ip_net = ip_network('192.168.32.160/255.255.255.240') #Ip_network - создает принимает на вхад IP узла и максу и преобразует в ip сети
k = 0 #счетчик котрый считает сколько масок с четным кол-во едениц
for ip_add in ip_net: #перебираем все возможные сети созданные этой маской и узлом
	if f'{ip_add:b}'.count('1') % 2 == 0: #делаем проверку через четное или не четное кол-во едениц в записи сети (через f строки можно преобразовывать 10 число в 2 если в конце поставить символ b)
							k += 1 #увеличиваем счетчик на 1
print(k)

# PS Ip адрес сети это адрес всех компьютеров в доме, а ip адрес узла это адрес определенного компьютера (можно привести пример с рыбацкой сеть вся сеть это совокупность компьютеров а один узел в сети это твой личный комп)


from ipaddress import *
k = 0
net = ip_network('252.67.33.87/255.248.0.0', 0)
for ip_add in net:
	if (bin(int(ip_add))[2:].zfill(32)[16:].count('1') / bin(ip_add))[2:].zfill(32)[:16].count('1') > 2:
		k += 1
print(k)

# Так же важный момент, если делать через int(bin(ip_add)) то в таком случае он отбрасывает не значащие нули и в задачах где надо правые два байта и левые два байта сравнить, они будут делиться не поровну, поэтому в конце добиваем через zfill, на на самом деле f строки это заебись


# Если нам надо получить ip узла, мы поразрядно умножаем ip сети на маску, маска отделает номер квартиры от дома. Что бы получить адрес сети надо после ip_network поставить 0 через ,


# В маске всегда с начала идут единицы, а потом нолики 11111111.11111111.11110000.00000000


# Если спрашивают сколько может быть различных значений маски, то надо найти сколько есть изменяющихся 0 или 1 и уножить их на 2
# пример: узел 10010000 . 10100000
#             маска 1111xxxx  . 0x0xxxxxx        
#             адрес 10010000 . 00000000

# в этом случае либо ноль либо 1 может стоять только между последней 1 и первым нулем, то есть их всего 4



# когда спрашивают в скольких вариантах четное или не четное кол-во единиц, можно просто найти кол-во всех вариантов и просто поделить на 2 потому что всегда ровно в половине случаев будет четное кол-во единиц, а в половине нечетное





