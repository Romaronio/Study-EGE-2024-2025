# 15 задание на нахождение переменной которая подходит под какое-либо условие

# 1 способ решения (Через a_podoshel и Del)
def Del(n, m): #обязательно Del пишем с большой буквы, с маленькой это зарезервированное имя
	return n % m == 0  #проверяем, что n нацело делится на m
for a in range(1, 1000): #перебраем все возможные значения a
	a_podoshel = 1 #создаем переменную которая является флагом
	for x in range(1, 10000): #перебираем все возможные x
		if ((Del(x, a) and Del(x, 24)) <= Del(x, 36)) == 0: #прописываем условие и проверяем, что оно не является ложным
								a_podoshel = 0 #если условие ложно, то меняем значение флага на отрицательное, вакцина кого-то убила
		break #и выходим из цикла, пример с вакциной
	if a_podoshel == 1: #если вацину прокололи всем подопытным людям и она не дала сбоя, то ее можно выводить
		print(a)
		break

#2 способ решения (Через конструкцию for else)

for a in range(1, 1000): #перебор всех значений A
	for x in range(1, 1000): #перебор всех значений x 
			if (((x & 14 != 0) and (x & 61 != 0)) <= ((x & a != 0) and (x & 78 != 0))) == 0: #проверка если условие является ложным, то выходим из цикла
				break
			else: #конструкция for else работает так, что если не было ни одного выхода из цикла и произошел перебор всех возможных решений, то вополняется действие после else
					print(a)
					break

#3 способ решения (в том случае если надо перебирать 2 переменных x и y)

for a in range(1, 1000): #перебираем все значения A при кротрых возможно найдется такое, которое будет наименьшим, если надо наибольшее, то делаем перебор с конца
	a_podoshel = 1 #задаем переменную которая является флагом и показывает, когда A подходит, а когда не подходит
	for x in range(1, 1000): #перебираем все возможнае иксы
		for y in range(1, 1000): #перебираем все возможные игрики
			if ((x < a) or (y < a) or (x + 2 * y > 50)) == 0: #переписываем условие которое дано в задаче и проверяем, в каких случаях оно будет ложно
				a_podoshel = 0 #пример с вакциной, если вакцина не подходит то мы меняем флаг с положительного на отрицательный
				break   #и следственно если вакцина не подходит то мы перестаем ее колоть людям
		if a_podoshel == 0: #так же проверяе для всех иксов и выходим из цикла
			break 
	if a_podoshel == 1:
		print(a) #выводим значение a
		break


#4 способ (самый короткий, но не самый легкий для понимания)
for a in range(1, 1000):  #перебираем выборку возможных значений A
	if all(((y + 7 * x != 36) or (a > x - 2) or (a < y + 27))for x in range(1, 1000) for y in range(1, 1000)) == True: #прописываем условие, All отвечает за то, что все значения полоучившеся при переборе выборки x и y являются верными, если это так, то выводим значение а
			print(a)
			break


#5 способ на решение отрезков нам надо найти наименьшую длинну отрезка

p = list(range(3, 19))  #создаем список (на питоне), массив в js тут главное правильно прочитать от какого до какого числа включительно или выключенно 
q = list(range(11, 24)) #создаем второй массив
a = [] #пример со списком домашек, изначально я вообще ничего не сделал, в надежде, что прокатит 
for x in range(1, 100): #перебираем все возможные значения x 
	if (((x in p) and (x in q)) <= (x in a)) == 0: #потом я пришел на урок и смтрю какой учитель, если учитель плохой, то мне срочно на переменке надо сделать дз к его уроку, если учитель хороший, соответсвтвено можно ничего не делать 
		a.append(x) #если учитель плохой, я делаю эту домашку и добовляю ее к своим дз
							#print((((x in p) and (x in q)) <= (x in a)) == 0) если мы еще раз выполним эту операцию после добавления в список элемента, то она нам уже выдаст true а не False
print(a, 18 - 11) #когда мы из 18 вычетаем 11, то мы таким образом находим длинну отрезка, но всегда надо обязательно проверять, что эти числа были в изначальном условии, что нам их давали в задаче. Отрезок может состоять только из чисел которые нам даны

#5 способ решение отрезков но нахождение наибольшего отрезка

p = list(range(13, 33)) #создаем массив или отрезок p
q = list(range(15, 21)) #создаем массив или отрезок q
a = list(range(1, 100)) #создаем множество а, оно должно быть больше максимальной длинны наибольшего отрезка, как пример, сначала мы набираем все что можно взять в корзину и идем просить маму, чтобы она купила 
for x in range(1, 100): #перебираем все возможные иксы
	if (((x in a) <= (x in p)) or (x in q)) == 0: #проверяем, если маму тригирит и она не хочет нам это покупать, значит мы выкладываем эту сладость из корзины, мы же не хотим ругани
							a.remove(x) #удаляем этот x из массива a 
print(a, 32 - 13)  #обязательно проверяем, если принт выдает нам а от [13, 14, 15, ...., 30, 31], то мы не можем в ответ записать 31, так как это чило не являетяся отрезком, а значит надо взять соседнне число, которое является границей отрезка    






